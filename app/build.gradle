
apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions' //扩展插件

apply plugin: 'kotlin-kapt'  //kapt3插件

apply plugin: 'org.greenrobot.greendao' // apply plugin
apply plugin: 'com.getkeepsafe.dexcount'
apply from: '../global_config.gradle'


kapt {
  arguments {
    arg("AROUTER_MODULE_NAME", project.getName())
  }
}


def getAppName() {
  Properties properties = new Properties()
  properties.load(new InputStreamReader(new FileInputStream(rootProject.getRootDir().getAbsolutePath() + "/gradle.properties")))
  return properties.getProperty("APP_NAME")
}
android {
  compileSdkVersion rootProject.ext.android.compileSdkVersion
  packagingOptions {
    pickFirst 'lib/armeabi-v7a/libijkplayer.so'
  }
    defaultConfig {
        resValue("string", "app_name", "${getAppName()}")
        applicationId "com.zlcdgroup.mrsei"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
      ndk {
        // 设置支持的SO库架构
        // abiFilters 'armeabi', 'armeabi-v7a','arm64-v8a'
        // abiFilters 'armeabi'
        abiFilters 'armeabi', 'armeabi-v7a'
      }
      javaCompileOptions {
        annotationProcessorOptions {
          arguments = ["room.schemaLocation":
                           "$projectDir/schemas".toString()]
        }
      }
    }

  // gradle 4.0 后dataBinding 改了
//  dataBinding {
//    enabled true
//  }
  buildFeatures{
    dataBinding = true
    // for view binding :
    // viewBinding = true
  }

  adbOptions {
    // adb 执行超时时间 毫秒
    timeOutInMs 10 * 60 * 1000  // 10 minutes
    /**
     * -r: replace existing application
     * -t: allow test packages
     * -d: allow version code downgrade (debuggable packages only)
     * -p: partial application install (install-multiple only)
     * -g: grant all runtime permissions
     */
    // apk 安装时候可选参数
    // adb install -d
    installOptions "-d", "-t"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = "1.8"
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/LGPL2.1'
    exclude 'lib/mips64/*.so'
    exclude 'lib/mips/*.so'
  }

  lintOptions {
    disable 'GoogleAppIndexingWarning'
    abortOnError false
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      // buildConfigField "int", "AppCode", "1"
      //混淆
      minifyEnabled false
      //Zipalign优化
      zipAlignEnabled true
      // 移除无用的resource文件
      // shrinkResources true
      //前一部分代表系统默认的android程序的混淆文件，该文件已经包含了基本的混淆声明
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      pseudoLocalesEnabled true

    }
    debug {
      resValue("string", "PORT_NUMBER", "8082")
      signingConfig signingConfigs.debug
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      zipAlignEnabled true
      // versionNameSuffix "-debug"
      pseudoLocalesEnabled true
    }
  }



  // Always show the result of every unit test, even if it passes.
  testOptions.unitTests.all {
    testLogging {
      events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
  }

  sourceSets {
    main {
      manifest.srcFile 'src/main/AndroidManifest.xml'
      java.srcDirs = ['src/main/java']
      res.srcDirs = ['src/main/res']
      jniLibs.srcDirs = ['libs']
      assets.srcDirs = ['src/main/assets']
      androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }


  }
  dynamicFeatures = []
}
greendao {
  schemaVersion 1
  daoPackage 'com.zlcdgroup.mrsei.data.db.dao'
  targetGenDir 'src/main/java'
}



dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
  def room_version = "2.3.0-alpha03"
  api "androidx.room:room-runtime:$room_version"
  kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
  // optional - Kotlin Extensions and Coroutines support for Room
  implementation "androidx.room:room-ktx:$room_version"
  // optional - RxJava support for Room
  implementation "androidx.room:room-rxjava2:$room_version"
  // optional - Guava support for Room, including Optional and ListenableFuture
  implementation "androidx.room:room-guava:$room_version"

  // paging
  def paging_version = "3.0.0-alpha08"

  implementation "androidx.paging:paging-runtime-ktx:$paging_version"

  // alternatively - without Android dependencies for tests
  testImplementation "androidx.paging:paging-common-ktx:$paging_version"

  // optional - RxJava2 support
 // implementation "androidx.paging:paging-rxjava2:$paging_version"

  // optional - Guava ListenableFuture support
 // implementation "androidx.paging:paging-guava:$paging_version"

  // Test helpers
  testImplementation "androidx.room:room-testing:$room_version"
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.5'
  // Dependencies for local unit tests
  testImplementation "junit:junit:$rootProject.ext.junitVersion"
  testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
  testImplementation "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
  // 如果需要 mock final 类或方法的话，还要引入 mockito-inline 依赖
  testImplementation "org.mockito:mockito-inline:$rootProject.ext.mockitoVersion"
  testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"
  testImplementation "org.robolectric:robolectric:4.4"
  testImplementation 'com.android.support.test:runner:1.1.0'
  testImplementation 'com.android.support.test:rules:1.1.0'


  androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.1.0'
  androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.1.0'
  androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.1.0'
  androidTestImplementation 'com.android.support.test:runner:1.1.0'
  androidTestImplementation 'com.android.support.test:rules:1.1.0'
//  androidTestImplementation ('androidx.test:runner:1.1.0'){
//    exclude group: 'com.android.support', module: 'support-annotations'
//  }
//  androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0') {
//    exclude group: 'com.android.support', module: 'support-annotations'
//  }

  implementation 'androidx.multidex:multidex:2.0.1'
  implementation 'org.greenrobot:greendao:3.3.0' // add library
 // implementation 'net.zetetic:android-database-sqlcipher:4.1.3@aar'

    kapt 'com.google.dagger:dagger-android-processor:2.28.3'
    kapt 'com.google.dagger:dagger-compiler:2.28.3'

  implementation 'com.stepstone.stepper:material-stepper:4.3.1'
  debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

  implementation files('libs/umeng-sharetool-6.9.4.jar')

  implementation  'com.umeng.umsdk:common:2.0.2'
  implementation  'com.umeng.umsdk:utdid:1.1.5.3'
  implementation  'com.umeng.umsdk:share-core:6.9.4'
  implementation files('libs/umeng-share-wechat-full-6.9.4.jar')
  implementation files('libs/wechat-sdk-android-without-mta-5.1.4.jar')
  implementation files('libs/umeng-share-QQ-simplify-6.9.4.jar')

  implementation 'com.alibaba:arouter-api:1.5.0'
  kapt 'com.alibaba:arouter-compiler:1.2.2'
  implementation 'com.github.florent37:camerafragment:1.0.9'
  kapt "org.permissionsdispatcher:permissionsdispatcher-processor:4.8.0"


  implementation "androidx.work:work-runtime-ktx:2.4.0"
  implementation 'com.github.arimorty:floatingsearchview:2.1.1'
  implementation 'com.github.clans:fab:1.6.4'
  implementation 'com.github.adrielcafe:AndroidAudioRecorder:0.3.0'
  implementation 'com.wdullaer:materialdatetimepicker:4.2.3'
  implementation 'com.lapism:search:2.2.0@aar'
  api project(':androidutil')
  implementation project(path: ':zxingcamera')
  implementation project(path: ':maplibs')
  implementation project(path: ':tuyalibs')
  implementation project(path: ':medialibs')
}

