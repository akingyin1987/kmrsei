apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions' //扩展插件

apply plugin: 'kotlin-kapt'  //kapt3插件

apply plugin: 'com.getkeepsafe.dexcount'
android {
  compileSdkVersion rootProject.ext.android.compileSdkVersion

  defaultConfig {
    minSdkVersion rootProject.ext.android.minSdkVersion
    targetSdkVersion rootProject.ext.android.targetSdkVersion
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  lintOptions {
    disable 'GoogleAppIndexingWarning'
    abortOnError false

  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  sourceSets {
    main {
      jniLibs.srcDirs = ['libs']
    }

    // Move the build types to build-types/<type>
    // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
    // This moves them out of them default location under src/<type>/... which would
    // conflict with src/ being used by the main source set.
    // Adding new build types or product flavors should be accompanied
    // by a similar customization.
    debug.setRoot('build-types/debug')
    release.setRoot('build-types/release')
  }
}
//为Dagger创建了需要的自生成类
//kapt {
//  generateStubs = true
//}
dependencies {
  implementation fileTree(include: ['*.jar'], dir: 'libs')

  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  testImplementation 'junit:junit:4.12'

  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
  api rootProject.ext.rxJavaLibs
  api rootProject.ext.supportLibs
  api rootProject.ext.networkLibs
  api 'com.bilibili:magicasakura:0.1.8@aar'
  api 'com.classic.common:multiple-status-view:1.5.1'
  api 'com.google.dagger:dagger-android:2.22.1'
  api 'com.google.dagger:dagger-android-support:2.22.1'
  // if you use the support libraries
  kapt 'com.google.dagger:dagger-android-processor:2.22.1'
  kapt 'com.google.dagger:dagger-compiler:2.22.1'
  api 'com.jakewharton.timber:timber:4.7.1'
  //  debugApi('com.readystatesoftware.chuck:library:1.1.0') {
  //    exclude group: 'com.android.support'
  //  }
  //  releaseApi('com.readystatesoftware.chuck:library-no-op:1.1.0') {
  //    exclude group: 'com.android.support'
  //  }
  debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
  releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
  // Optional, if you use support library fragments:
  debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.1'
  api 'com.github.tbruyelle:rxpermissions:0.10.2'
  implementation files('libs/rfidapi.jar')
  api 'com.github.GrenderG:Toasty:1.3.0'
  api 'com.afollestad.material-dialogs:commons:0.9.6.0'

  api 'com.alibaba:fastjson:1.1.71.android'
  implementation 'me.yokeyword:fragmentation:1.3.6'
  api 'com.blankj:utilcode:1.20.1'
  api 'androidx.core:core-ktx:1.1.0-alpha05'

}
